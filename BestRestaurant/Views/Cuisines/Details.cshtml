@{
  Layout = "_Layout";
}

@model BestRestaurant.Models.Cuisine
@using BestRestaurant.Models

<h2>Cuisine Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.CuisineType): @Html.DisplayFor(model => model.CuisineType)<h3>

@if (@Model.Restaurants.Count == 0)
{
  <h3>No restaurants have been added to this list of cuisines yet!</h3>
} 
else
{
  <h3>Restaurants the Cuisine Contains:</h3>
  <ul>
  @foreach(Restaurant restaurant in Model.Restaurants)
  {
    string reviews = "";
    @if(restaurant.JoinEntities.Count == 0)
    {
      reviews = "This restaurant does not have any reviews.";
    }
    else
    {
      List<string> reviewList = new List<string>();
      @foreach(RestaurantReview join in restaurant.JoinEntities)
      {
        reviewList.Add(join.Review.Rating);
      }
      reviews = String.Join(", ", reviewList);
    }
    <li>@restaurant.Name | Reviews: @reviews</li>
  }
  </ul>
}
<p>@Html.ActionLink("Add new restaurant", "Create", "Restaurants")</p>
<p>@Html.ActionLink("Edit Cuisine", "Edit", new { id = Model.CuisineId })</p>
<p>@Html.ActionLink("Delete Cuisine", "Delete", new { id = Model.CuisineId })</p>
<p>@Html.ActionLink("Back to list", "Index")</p>